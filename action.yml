name: Standards
description: Keeps modules up to date with the latest standards

# ! [remote rejected] pulls/1/standards-1655812934 -> pulls/1/standards-1655812934 (refusing to allow a GitHub App to
# create or update workflow `.github/workflows/ci.yml` without `workflows` permission)

# :-[ ^ we need to use a PAT (personal access token) with the 'workflow - Update GitHub Action workflows ' checkbox
# ticked, and then add this token to every repo, which obviously is not going to happen


# TODO: when updating ci.yml - it needs to read existing ci.yml and retain the 'with' options

runs:
  using: composite
  steps:

    - name: Checkout code
      uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e # v2.4.2

    - name: Update workflows
      shell: bash
      env:
        GITHUB_REPOSITORY: ${{ github.repository }}
      run: |
        mkdir -p .github/workflows
        for WORKFLOW in ci standards keepalive; do
          php ${{ github.action_path }}/create_workflow.php $WORKFLOW $GITHUB_REPOSITORY ${{ github.action_path }} \
            > .github/workflows/$WORKFLOW.yml
        done

    - name: Evaluate diff
      shell: bash
      run: |
        if [[ $(git diff) == "" ]]; then
          echo "git diff found no changes, exiting now"
          exit 0
        fi
        echo "git diff found changes"

    - name: Remove any old branches
      shell: bash
      env:
        GITHUB_REPOSITORY: ${{ github.repository }}
      run: |
        JSON=$(curl https://api.github.com/repos/$GITHUB_REPOSITORY/branches)
        BRANCHES=$(echo $JSON | jq -r '.[] | .name | select(.|test("^pulls\/[0-9]\/standards-[0-9]{10}$"))')
        for BRANCH in $BRANCHES; do
          if [[ "$BRANCH" =~ ^pulls/[0-9\.]+/update\-js\-[0-9]+$ ]]; then
            git push origin --delete "$BRANCH"
            echo "Deleted old branch $BRANCH"
          fi
        done

    - name: Generate branch name
      id: generate-branch-name
      shell: bash
      env:
        GITHUB_REF: ${{ github.ref }}
      run: |
        # Convert refs/heads/mybranch to mybranch
        CUT=$(echo $GITHUB_REF | cut -c 12-)
        # e.g. pulls/1/standards-1647810133
        BRANCH=pulls/$CUT/standards-$(date +%s)
        echo ::set-output name=branch::$BRANCH

    - name: Create pull-request
      uses: silverstripe/gha-pull-request@v1
      with:
        branch: ${{ steps.generate-branch-name.outputs.branch }}
        title: MNT Update standards
        description: Automated standards
